<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>

        <!-- Useful for specs -->
        <!ENTITY MAY    '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MAY</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">
]>

<book version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xml:id="clb-getting-started-2">
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>Rackspace Cloud Load Balancers Getting Started Guide, v2.0</title>
    <titleabbrev>Rackspace Cloud LB and Servers Getting Started Guide, v2.0</titleabbrev>

    <info>       
        <copyright>
            <year>2011</year>
            <year>2012</year>
            <year>2013</year>
            <year>2014</year>
            <year>2015</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v2.0</releaseinfo>
        <productname>Rackspace Cloud Load Balancers</productname>
        <pubdate>2015-12-11</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <revhistory>
            <revision>
                <date>2015-12-11</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial EA release.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
                  
        </revhistory>
    <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
      <raxm:displayname>Getting Started Guide</raxm:displayname>
      <raxm:product version="v2.0">loadbalancers</raxm:product>
      <raxm:priority>10</raxm:priority>
    </raxm:metadata> 
    </info>
    <chapter xml:id="LB_Overview">
        <title>Overview</title>
        <para>Follow the steps described in this guide to use the
            Rackspace Cloud Load Balancers API v2.0 and the Cloud
            Servers<trademark/> section of the Rackspace Cloud Control
            Panel to create a load balancer configuration to balance
            traffic for your Rackspace Cloud Servers.</para>
        <para>For details about using the Cloud Load Balancers  v2.0,
            refer to the <citetitle>Cloud Load Balancers Developer
                Guide, v2.0</citetitle> at <link
                xlink:href="http://docs.rackspace.com/"
                >http://docs.rackspace.com/</link>.</para>
        <para>For more details about the Rackspace Cloud Load
            Balancers service, refer to <link
                xlink:href="http://www.rackspace.com/cloud/load-balancing/"
                >http://www.rackspace.com/cloud/load-balancing/</link>.
            This site also offers links to Rackspace's official
            support channels, including knowledge base articles,
            forums, phone, chat, and email.</para>
        <section xml:id="Prerequisites_Examples">
            <title>Prerequisites for running examples</title>
            <para>In order to run the examples in this guide, you must
                have the following prerequisites: <itemizedlist
                    spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud username and password,
                            as specified during registration</para>
                    </listitem>
                </itemizedlist></para>
        </section>
        <section xml:id="Pricing_SLA-d1e1362">
            <title>Pricing and service level</title>
            <para>Cloud Load Balancers is part of the Rackspace Cloud
                and your use through the API will be billed as per the
                pricing schedule at <link
                    xlink:href="http://www.rackspace.com/cloud/public/loadbalancers/pricing/"
                    >http://www.rackspace.com/cloud/public/loadbalancers/pricing/</link>.
                Cloud Servers is also part of the Rackspace Cloud and
                your use through the Cloud Control Panel will be
                billed as per the pricing schedule at <link
                    xlink:href="http://www.rackspace.com/cloud/public/servers/pricing/"
                    >http://www.rackspace.com/cloud/public/servers/pricing/</link>.</para>
            <para>The Service Level Agreements (SLAs) for Cloud Load
                Balancers and Cloud Servers are available at <link
                    xlink:href="http://www.rackspace.com/cloud/legal/sla/#cloud_load_balancers"
                    >http://www.rackspace.com/cloud/legal/sla/#cloud_load_balancers</link>
                and <link
                    xlink:href="http://www.rackspace.com/cloud/legal/sla/"
                    >http://www.rackspace.com/cloud/legal/sla/</link>
                respectively.</para>
        </section>
    </chapter>
    <chapter xml:id="Create_Cloud_Server">
        <title>Create a new Cloud Server</title>
        <para>In this chapter you will create a new Cloud Server (or
            use an existing Cloud Server) to set up as a member for
            your load balancer.</para>
        <note>
            <para>If you are using an existing Cloud Server on your
                account, skip Steps 1-4 below and go directly to Step
                5.</para>
        </note>
        <para>Create a Cloud Server using the Cloud Servers section of
            the Cloud Control Panel (login here: <link
                xlink:href="http://mycloud.rackspace.com/">Cloud Control
                Panel</link>).</para>
        <note>
            <para>You can also create a Cloud Server using the Cloud
                Servers API. Refer to the <citetitle><link
                    xlink:href="http://developer.rackspace.com/docs/">Cloud
                    Servers API Developer Guide</link></citetitle> for
                details.</para>
        </note>
        <procedure>
            <title>To create a Cloud Server using the Cloud Control
                Panel:</title>
            <step>
                <para>Click <guimenuitem>Servers</guimenuitem> to view
                    the Cloud Servers page.</para>
            </step>
            <step>
                <para> Click <guimenu>Create Server</guimenu>, then
                    select the Region, and specify the Server
                    Name</para>
            </step>
            <step>
                <para> Select an image from a list of different
                    operating systems, including Linux Distributions
                    and Windows Images:</para>
            </step>
            <step>
                <para> Specify the <guilabel>Flavor</guilabel> for
                    your Cloud Server, then click <guibutton>Create
                        Server</guibutton>. </para>
            </step>
            <step>
                <para>Record the IP address of your Cloud Server below
                    (from the information displayed in the Cloud
                    Servers section of the Cloud Control Panel):<itemizedlist>
                        <listitem>
                            <para>Cloud Server IP Address =
                                _______________________________________
                            </para>
                        </listitem>
                    </itemizedlist></para>
            </step>
        </procedure>
    </chapter>
    <chapter xml:id="DB_Sending_API_Requests">
        <title>Send requests to the API</title>
        <para>You have several options for sending requests through an
            API: </para>
        <itemizedlist spacing="compact">
            <listitem>
                <para>Developers and testers may prefer to use cURL,
                    the command-line tool from <link
                        xlink:href="http://curl.haxx.se/"
                        >http://curl.haxx.se/</link>. </para>
                <para>With cURL you can send HTTP requests and receive
                    responses back from the command line. </para>
            </listitem>
            <listitem>
                <para>If you like to use a more graphical interface,
                    the ReST client for Firefox also works well for
                    testing and trying out commands, see <link
                        xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/"
                        >https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>. </para>
            </listitem>
            <listitem>
                <para>You can also download and install rest-client, a
                    Java application to test ReSTful web services,
                    from <link
                        xlink:href="http://code.google.com/p/rest-client/"
                        >http://code.google.com/p/rest-client/</link>. </para>
            </listitem>
        </itemizedlist>
        <section xml:id="DB_using-curl-cli">
            <title>Send API requests using cURL</title>
            <para>cURL is a command-line tool that is available on
                most UNIX®-like environments and Mac OS X® and can be
                downloaded for Windows® in order to interact with the
                ReST interfaces. For more information on cURL, visit
                    <link xlink:href="http://curl.haxx.se/"
                    >http://curl.haxx.se/</link>. </para>
            <para>cURL allows you to transmit and receive HTTP requests and responses from the
                command-line or from within a shell script. This makes it possible to work with the ReST API
                directly without using one of the client APIs. </para>
            <para>The following cURL command-line options will be used
                in this guide to run the examples:</para>
            <table xml:id="curl_options" rules="all" width="75%">
                <caption>cURL Command-Line Options</caption>
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <option>-d</option>
                        </td>
                        <td>
                            <para>Sends the specified data in a &POST;
                                request to the HTTP server. Use this
                                option to send a JSON or XML request
                                body to the server.</para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-H</option>
                        </td>
                        <td>
                            <para>Specifies an extra HTTP header in
                                the request. You can specify any
                                number of extra headers. Precede each
                                header with the <option>-H</option>
                                option. </para>
                            <para>Common headers in Rackspace API
                                requests are:<itemizedlist>
                                   <listitem>
                                   <para><literal>Content-Type</literal>.
                                   Required for operations with a
                                   request body. </para>
                                   <para>Specifies the format of the
                                   request body. The syntax for the
                                   <literal>Content-Type</literal>
                                   header is:</para>
                                   <screen><computeroutput>Content-Type: application/<parameter>format</parameter></computeroutput></screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   either <literal>json</literal> or
                                   <literal>xml</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>X-Auth-Project-Id</literal>.
                                   Optional. Specifies the project ID,
                                   which can be your account number or
                                   another value.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>Accept</literal>.
                                   Optional. </para>
                                   <para>Specifies the format of the
                                   response body. The syntax for the
                                   <literal>Accept</literal> header
                                   is:</para>
                                   <screen><computeroutput>Accept: application/<parameter>format</parameter></computeroutput></screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   either <literal>json</literal> or
                                   <literal>xml</literal>. Default is
                                   <literal>json</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>X-Auth-Token</literal>.
                                   Required. Specifies the
                                   authentication token.</para>
                                   </listitem>
                                </itemizedlist></para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-i</option>
                        </td>
                        <td>
                            <para>Includes the HTTP header in the
                                output. </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-s</option>
                        </td>
                        <td>
                            <para>Silent or quiet mode. Does not show
                                progress or error messages. Makes cURL mute.<note>
                                   <para>If your cURL command is not
                                   generating any output, try
                                   replacing the <code>-s</code>
                                   option with <code>-i</code>.</para>
                                </note>
                            </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-X</option>
                        </td>
                        <td>
                            <para>Specifies the request method to use
                                when communicating with the HTTP
                                server. The specified request is used
                                instead of the default method, which
                                is &GET;. </para>
                        </td>
                    </tr>
                </tbody>
            </table>
            <note xml:id="json_tool">
                <title>json.tool</title>
                <para>For commands that return a JSON response, you
                    can append the following code to the command to
                    call the json.tool to pretty-print output: </para>
                <programlisting language="bash" role="gutter: false">| python -m json.tool</programlisting>
                <para>To use the json.tool, import the json module.
                    For information about the json.tool, see <link
                        xlink:href="http://docs.python.org/2/library/json.html"
                        >json — JSON encoder and decoder</link>. </para>
                <para>If you do not want to pretty-print JSON output,
                    omit this code. </para>
            </note>
        </section>
        <section xml:id="DB_copy_paste_examples">
            <title>Copying and pasting cURL request examples into a
                terminal window</title>
            <para>To run the cURL request examples shown in this guide
                on Linux or Mac systems, select the desired example
                from the HTML version of this guide by clicking the
                Select Text icon to the right of the example and then
                select Edit->Copy. Then paste it into an ASCII editor
                (for example <emphasis role="bold">vi</emphasis> or
                    <emphasis role="bold">TextEdit</emphasis>). Next
                modify the example with your required account
                information and so forth, as detailed in this
                guide.</para>
            <note>
                <para>The carriage returns in the cURL request
                    examples that are part of the cURL syntax are
                    escaped with a backslash ('\') in order to avoid
                    prematurely terminating the command. However you
                    should not escape carriage returns inside the xml
                    or json message within the command.</para>
            </note>
            <para>Consider the following cURL Authenticate Request:
                XML example that is described in detail in <xref
                    linkend="Generating_Auth_Token"/>:</para>
            <example>
                <title>cURL Authenticate Request: XML</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'&lt;?xml version="1.0" encoding="UTF-8"?>  
 &lt;auth&gt;   
    &lt;apiKeyCredentials     
        xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"     
        username="<emphasis role="bold">your_username</emphasis>"     
        apiKey="<emphasis role="bold">your_api_key</emphasis>"/&gt;   
 &lt;/auth&gt;<option>'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri></screen>
            </example>
            <para>You can see that the lines that are part of the cURL
                command syntax have all been escaped with a backslash
                ('\') to indicate that the command continues on the
                next line:</para>
            <screen language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
  
   
(... lines within the xml portion of the message are not shown in this example)
(... the example only shows lines that are part of cURL syntax)     
     
    
   
 &lt;/auth&gt;<option>'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri></screen>
            <para>However the lines <emphasis>within</emphasis> the
                xml portion of the message are
                    <emphasis>not</emphasis> escaped with a backslash
                ('\') in order to avoid issues with the xml
                processing:</para>
            <screen language="bash">'&lt;?xml version="1.0" encoding="UTF-8"?>  
 &lt;auth&gt;   
    &lt;apiKeyCredentials     
        xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"     
        username="<emphasis role="bold">your_username</emphasis>"     
        apiKey="<emphasis role="bold">your_api_key</emphasis>"/&gt;   
 &lt;/auth&gt;<option>'</option> \
</screen>
            <note>
                <para>The final line of the xml message is escaped
                    since the backslash lies
                        <emphasis>outside</emphasis> the xml message
                    and continues the cURL command to the next
                    line.</para>
            </note>
            <para>After you are finished modifying the text for the
                cURL request example with your information (for
                example <emphasis role="bold"
                        ><code>your_username</code></emphasis> and
                    <emphasis role="bold"
                    ><code>your_api_key</code></emphasis>), paste it
                into your terminal window. Then execute the cURL
                command by pressing <guilabel>Enter</guilabel>.</para>
            <para>If you have trouble copying and pasting the examples
                as described, try typing the entire example on one
                long line, removing all the backslash line
                continuation characters.</para>
        </section>
    </chapter>
    <chapter xml:id="Generating_Auth_Token">
        <title>Generate an authentication token</title>
        <para>You need to generate a token whether you use cURL or a
            ReST client.</para>
        
        <para>In order to use the ReST API, you will first need to
            obtain an authentication token, which will need to be
            passed in for each request using the
                <code>X-Auth-Token</code> header. </para>
        <para>The following example demonstrates how to use cURL to
            obtain the authentication token and the account number.
            You will need to supply the authentication token and
            account number when making subsequent Cloud Load Balancer
            API calls.</para>
        <para>Remember to replace the names in the Authenticate
            Request examples below with their respective values:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold"
                            >your_username</emphasis> &mdash; The
                        username is your common Rackspace Cloud
                        username, as supplied during
                        registration.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"
                            >your_api_key</emphasis> &mdash; The key
                        is your API access key.</para>
                    <para><emphasis role="bold">To find your API
                            Key:</emphasis></para>
                    <orderedlist>
                        <listitem>
                            <para>Log in to the Cloud Control Panel
                                   (<link
                                   xlink:href="https://mycloud.rackspace.com"
                                   >https://mycloud.rackspace.com</link>).</para>
                        </listitem>
                        <listitem>
                            <para>On the upper-right side of the top
                                navigation pane, click your
                                username.</para>
                        </listitem>
                        <listitem>
                            <para>From the menu, select
                                   <guimenuitem>Account
                                   Settings</guimenuitem>.</para>
                        </listitem>
                        <listitem>
                            <para>In the Login Details section of the
                                Account Settings page, locate the
                                   <guilabel>API Key</guilabel> field
                                and click
                                <guibutton>Show</guibutton>.</para>
                        </listitem>
                        <listitem>
                            <para>Copy the value of the API Key and
                                paste it into a text editor of your
                                choice.</para>
                        </listitem>
                        <listitem>
                            <para>Click <guibutton>Hide</guibutton> to
                                hide the value of the API Key. </para>
                        </listitem>
                    </orderedlist>
                    <para>You also need your cloud account number. In
                        the documentation, the account number is often
                        referred to as your tenant name or tenant ID
                        (technically, the ID is different from the
                        name, but at Rackspace, they are the same
                        thing). Together, three components—your
                        username, your API Key, and your tenant ID or
                        cloud account number—form the authentication
                        credentials that are required to connect to
                        the Rackspace cloud. To find your tenant ID or
                        cloud account number, locate your username on
                        the upper-right side of the top navigation
                        pane in the Cloud Control Panel. Click your
                        username to display the menu. The tenant ID or
                        account number is the first item in the
                        menu.</para>
                </listitem>
            </itemizedlist></para>
        <para> Use the following endpoint to access the Authentication
            Service, regardless of US or UK identities: </para>
        <itemizedlist spacing="compact">
            <listitem>
                <para><link xlink:href="&ENDPOINT-US-20;"
                        >&ENDPOINT-US-20;</link>
                </para>
            </listitem>
        </itemizedlist>
        <para> Your account may be based in either the US or the UK;
            this is not determined by your physical location but by
            the location of the Rackspace retail site which was used
            to create your account: </para>
        <itemizedlist spacing="compact">
            <listitem>
                <para> If your account was created via <link
                        xlink:href="http://www.rackspacecloud.com"
                        >http://www.rackspacecloud.com</link>, it is a
                    US-based account. </para>
            </listitem>
            <listitem>
                <para> If your account was created via <link
                        xlink:href="http://www.rackspace.co.uk"
                        >http://www.rackspace.co.uk</link>, it is a
                    UK-based account. </para>
            </listitem>
        </itemizedlist>
        <para>Notice that you authenticate using a special URL for
            Cloud authentication services. For example, you may use
                <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>,
            as shown in the following Authenticate Request example.
            Note that the <code>v2.0</code> component in the URL
            indicates that you are using version 2.0 of the Cloud Auth
            API.</para>
        <example security="writeronly">
            <title>cURL Authenticate Request: XML</title>
            <?dbfo keep-together="always"?>
            <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'&lt;?xml version="1.0" encoding="UTF-8"?>  
&lt;auth>
   &lt;apiKeyCredentials
      xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"
         username="<emphasis role="bold">your_username</emphasis>" 
         apiKey="<emphasis role="bold">your_api_key</emphasis>"/>
&lt;/auth>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | ppxml</screen>
        </example>
        <example>
            <title>cURL Authenticate Request: JSON</title>
            <?dbfo keep-together="always"?>
            <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {  
          "username": "<emphasis role="bold">your_username</emphasis>",  
          "apiKey": "<emphasis role="bold">your_api_key</emphasis>"}
    }  
}' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python -m json.tool</screen>
        </example>
        <example security="writeronly">
            <title>Authenticate Response: XML</title>
            <programlisting language="xml"><xi:include href="../../src/resources/samples/auth-20.xml" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <example>
            <title>Authenticate Response: JSON</title>
            <programlisting language="json"><xi:include href="../../src/resources/samples/auth-20.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <para>The authentication token <code>id</code> is returned
            along with an <code>expires</code> attribute that
            specifies when the token expires. </para>
        <note>
            <title>Notes</title>
            <itemizedlist spacing="compact">
                <listitem security="writeronly">
                    <para>If the authentication response returns a 401
                        message with a request for additional
                        credentials, your account requires
                        multi-factor authentication. To complete the
                        authentication process, submit a second
                            <guilabel>POST tokens</guilabel> request
                        with these multi-factor authentication
                        credentials: <itemizedlist>
                            <listitem>
                                <para>The session ID value returned in
                                   the <code>WWW-Authenticate: OS-MF
                                   sessionId</code> header parameter
                                   that is included in the response to
                                   the initial authentication
                                   request.</para>
                            </listitem>
                            <listitem>
                                <para>The passcode from the mobile
                                   phone associated with your user
                                   account.</para>
                                <example>
                                   <title>Authentication request with
                                   multi-factor authentication
                                   credentials</title>
                                   <programlisting language="bash" role="gutter: false"><?db-font-size 60%?><prompt>$</prompt>curl https://identity.api.rackspacecloud.com/v2.0/tokens \
     -X POST \
     -d '{"auth": {"RAX-AUTH:passcodeCredentials": {"passcode":"1411594"}}}'\
     -H "X-SessionId: $SESSION_ID" \
     -H "Content-Type: application/json" --verbose | python -m json.tool</programlisting>
                                </example>
                            </listitem>
                        </itemizedlist></para>
                    <para>For more information, see <link
                        xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/MFA_Ops.html"
                        >Multi-factor authentication</link> in the <citetitle>Cloud Identity Client
                            Developer Guide</citetitle>.</para>
                </listitem>
                <listitem>
                    <para>For all response examples in this guide, the
                        field values you receive in your responses
                        will vary from those shown here since they
                        will be specific to your account.</para>
                </listitem>
                <listitem>
                    <para>The <code>id</code> attribute in the
                        Authenticate Response specifies the
                        authentication token. Tokens are valid for a
                        finite duration.</para>
                    <para>Remember to supply your authentication token
                        wherever you see the field <emphasis
                            role="bold">your_auth_token</emphasis> in
                        the examples in this guide.</para>
                </listitem>
                <listitem>
                    <para>The <code>expires</code> attribute denotes
                        the time after which the token will
                        automatically become invalid. A token may be
                        manually revoked before the time identified by
                        the expires attribute; <code>expires</code>
                        predicts a token's maximum possible lifespan
                        but does not guarantee that it will reach that
                        lifespan. Clients are encouraged to cache a
                        token until it expires.</para>
                </listitem>
                <listitem>
                    <para>Applications should be designed to
                        re-authenticate after receiving a 401
                        (Unauthorized) response from a service
                        endpoint.</para>
                </listitem>
            </itemizedlist>
        </note>
        <para security="reviewer">Reviewer: please give me an example
            of the actual v2 service catalog with the v2 LB endpoint
            that I can add to the example above and in the section
            that follows.</para>
        <para>The <code>publicURL</code> endpoints for the services
            (for example
                <code>https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</code>)
            are also returned in the response. To call an API
            operation, add the URL for the operation to the end of the
            service endpoint. For example, the URL to Create a
            loadbalancer is
                <code>https://iad.networks.api.rackspacecloud.com/v2.0/lbass/loadbalancers</code>.</para>
        <para>Load balancer service endpoints are published in the
            service catalog in the Auth response with the account
            number, which is a required element of the service
            endpoints. The examples shown here are for authentication
            for US customers. Customers with UK-based accounts will
            see different values in the service catalog. Refer to
                <xref linkend="Service_Access_Endpoints-d1e753"/> for
            more information about service endpoints. </para>
        <para>After authentication, you can use cURL to perform &GET;,
            &DELETE;, &PUT;,  and &POST; requests for the Cloud Load
            Balancer API.</para>
        
    </chapter>
    <chapter xml:id="Service_Access_Endpoints-d1e753">
        <title>Service access/endpoints</title>
        <para>Specify a region to operate against by selecting an
            endpoint from the table below to use for your Cloud Load
            Balancer API calls.</para>
        <tip>
            <para>To help you decide which regionalized endpoint to
                use, read about special considerations for choosing a
                region at <link
                    xlink:href="http://www.rackspace.com/knowledge_center/article/about-regions"
                    >http://www.rackspace.com/knowledge_center/article/about-regions</link>.</para>
        </tip>
        <para>
            <table rules="all" security="writeronly">
                <?dbfo keep-together="always"?>
                <caption>Regionalized Service Endpoints</caption>
                <thead>
                    <tr align="center">
                        <td colspan="1">Region</td>
                        <td colspan="4">Endpoint</td>
                    </tr>
                </thead>
                <tbody>
                    <tr align="left">
                        <td colspan="1">Chicago (ORD)</td>
                        <td colspan="4">
                            <code>https://ord.networks.api.rackspacecloud.com/v2.0/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">Dallas/Ft. Worth (DFW) </td>
                        <td colspan="4">
                            <code>https://dfw.networks.api.rackspacecloud.com/v2.0/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">Northern Virginia (IAD) </td>
                        <td colspan="4">
                            <code>https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">London (LON)</td>
                        <td colspan="4">
                            <code>https://lon.networks.api.rackspacecloud.com/v2.0/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">Sydney (SYD)</td>
                        <td colspan="4">
                            <code>https://syd.networks.api.rackspacecloud.com/v2.0/</code></td>
                    </tr>
                    <tr align="left">
                        <td colspan="1">Hong Kong (HKG)</td>
                        <td colspan="4">
                            <code>https://hkg.networks.api.rackspacecloud.com/v2.0/</code></td>
                    </tr>
                </tbody>
            </table>
            <table rules="all">
                <?dbfo keep-together="always"?>
                <caption>Regionalized Service Endpoint</caption>
                <thead>
                    <tr align="center">
                        <td colspan="1">Region</td>
                        <td colspan="4">Endpoint</td>
                    </tr>
                </thead>
                <tbody>
                    
                    <tr align="left">
                        <td colspan="1">Northern Virginia (IAD) </td>
                        <td colspan="4">
                            <code>https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</code></td>
                    </tr>
                    
                </tbody>
            </table>
        </para>
        <para security="writeronly">
            <emphasis role="bold">Since you are load balancing Cloud
                Servers</emphasis> in this guide, you can determine
            the appropriate endpoint to select by viewing your Cloud
            Servers list and creating a load balancer within the same
            region as the datacenter in which your Cloud Server
            resides. When your resources reside in the same region as
            your load balancer, devices are in close proximity to each
            other and can take advantage of ServiceNet connectivity
            for free data transfer between services. </para>
        <note security="writeronly">
            <para>All examples in this guide assume that you are
                operating against the DFW datacenter, however if you
                are using a different datacenter, be sure to use the
                associated endpoint from the table above
                instead.</para>
        </note>
        <para>When making a Cloud Load Balancers API call, place the
            endpoint at the beginning of the request URL, for example:
                <code>https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</code><code>loadbalancers</code>,
            as you can see in the cURL Create load balancer request
            example in <xref linkend="Create_Load_Balancer"/>. Note
            that the <code>v2.0</code> component in the URL indicates
            that you are using version 2.0 of the Cloud Load Balancers
            API.</para>
    </chapter>
    <chapter xml:id="Create_Load_Balancer">
        <title>Create a load balancer</title>
        <para> Cloud Load Balancers make it easy to develop scalable,
            high-availability configurations in the Cloud. By
            leveraging Cloud Load Balancers, you will be provided with
            a dedicated IP address that you can use to reach your
            service.</para>
        <para>You need to use the Create load balancer API call
                (<code>/lbaas/loadbalancers</code>) to create a load
            balancer with the configuration that you specify.</para>
        <para>In this case, assume that you want to create a load
            balancer with the following configuration:</para>
        <itemizedlist>
            <listitem>
                <para>name = "loadbalancer1"</para>
            </listitem>
            <listitem>
                <para>description = "simple lb"</para>
            </listitem>
            <listitem>
                <para>tenant_id = "<emphasis role="bold"
                        >your_acct_id</emphasis>"</para>
                <para>Please replace <emphasis role="bold"
                        >your_acct_id</emphasis> with the UUID of the
                    tenant who owns the virtual IP (VIP)
                    address.</para>
                <para security="reviewer">Reviewer: please provide
                    instructions for how to get the UUID of the tenant
                    who owns the virtual IP (VIP) address.</para>
            </listitem>
            <listitem>
                <para>vip_subnet_id =
                    "013d3059-87a4-45a5-91e9-d721068ae0b2"</para>
                <para security="reviewer">The UUID of the subnet on
                    which to allocate the virtual IP (VIP)
                    address.</para>
                <para security="reviewer">Reviewer: please provide
                    instructions for how to get the
                    vip_subnet_id.</para>
            </listitem>
            <listitem>
                <para>vip_address = "10.0.0.4"</para>
                <para>The IP address of the VIP.</para>
                <note>
                    <para>This field is optional. Omit it to have the
                        system provide the VIP.</para>
                </note>
                <para security="reviewer">Reviewer: please provide
                    instructions for how to get the
                    vip_address.</para>
            </listitem>
            <listitem>
                <para>admin_state_up = "true"</para>
                <para>Specify that the admin state for the new load
                    balancer is up (true).</para>
            </listitem>
            <listitem security="writeronly">
                <para>description = "my_first_lb"</para>
                <note>
                    <para>When your resources reside in the same
                        region as your load balancer, devices are in
                        close proximity to each other and can elect to
                        take advantage of ServiceNet connectivity (by
                        specifying Virtual IP Type = SERVICENET) for
                        free data transfer between services if
                        desired.</para>
                </note>
            </listitem>
            <listitem security="writeronly">
                <para>Nodes = &lt;enter the IP address that you
                    recorded for your first Cloud Server created in
                        <xref linkend="Create_Cloud_Server"/>:</para>
                <itemizedlist>
                    <listitem>
                        <para><code>&lt;node address="</code><emphasis
                                role="bold">&lt;IP address of FIRST
                                cloud server></emphasis><code>"
                                port="80"
                            condition="ENABLED"/></code></para>
                    </listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
        <para>The following example shows the cURL request for Create
            Load Balancer:</para>
        <example security="writeronly">
            <title>cURL Create Load Balancer Request: XML</title>
            <programlisting language="bash"><command>curl -s -d</command> \
'&lt;?xml version="1.0" ?> 
&lt;loadBalancer xmlns="http://docs.openstack.org/loadbalancers/api/v1.0"
    name="a-new-loadbalancer"
    port="80"
    protocol="HTTP">
    &lt;virtualIps>
        &lt;virtualIp type="PUBLIC"/>
    &lt;/virtualIps>
    &lt;nodes>
        &lt;node address=<emphasis role="bold">"&lt;IP address of FIRST cloud server>"</emphasis> port="80" condition="ENABLED"/> 
    &lt;/nodes>
&lt;/loadBalancer>' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<uri>'https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/</uri><emphasis role="bold">your_acct_id</emphasis><uri>/loadbalancers'</uri> | ppxml</programlisting>
        </example>
        <example>
            <title>cURL Create Load Balancer Request: JSON</title>
            <programlisting language="bash"><command>curl -s -d</command> \
'{
    "loadBalancer": {
        "name": "loadbalancer1",
        "description": "simple lb",
        "tenant_id": "<emphasis role="bold">your_acct_id</emphasis>",
        "vip_subnet_id": "013d3059-87a4-45a5-91e9-d721068ae0b2",
        "vip_address": "10.0.0.4",
        "admin_state_up": true    
     }
}' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</uri><uri>loadbalancers'</uri> | python -m json.tool</programlisting>
        </example>
        <para>Remember to replace the names in the examples above with
            their actual respective values for all the cURL examples
            that follow:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold"
                            >your_auth_token</emphasis> &mdash; as
                        returned in your authentication response (see
                        the response examples in <xref
                            linkend="Generating_Auth_Token"/>)</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"
                            >your_acct_id</emphasis> &mdash; the UUID
                        of the tenant who owns the virtual IP (VIP)
                        address.</para>
                </listitem>
            </itemizedlist></para>
        <para>The following example shows the response for Create load
            balancer:</para>
        <example security="writeronly">
            <title>Create Load Balancer Response: XML</title>
            <programlisting language="xml"><xi:include href="../../src/resources/samples/lb-gs-create-required-response.xml" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <example>
            <title>cURL Create Load Balancer  Response: JSON</title>
            <programlisting language="json"><xi:include href="../../src/resources/samples-2/lb-gs-create-required-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <para>In the previous examples, you can see that a new load
            balancer has been created with id
            a36c20d0-18e9-42ce-88fd-82a35977ee8c. You will need the
            load balancer id for making the Show load balancer details
            call in the next section, and you should supply this value
            wherever you see the field <emphasis role="bold"
                >load_balancer_id</emphasis> in the examples in this
            guide.</para>
    </chapter>
    
    <chapter xml:id="List_LB_Details">
            <title>Show load balancer details</title>
            <para>This operation provides detailed output for a
            specific load balancer configured and associated with your
            account. This operation is not capable of returning
            details for a load balancer that has been deleted. </para>
        <para>This operation does not require a request body. </para>
        <para>The examples list the details for the load balancer
            (with <emphasis role="bold">load_balancer_id</emphasis>,
            which you will need to replace in the URL in the example
            below) that you created in the previous section.</para>
        <para>The following example shows the cURL request for Show
            load balancer details:</para>
        <example security="writeronly">
            <title>cURL List Load Balancer Details Request:
                XML</title>
            <programlisting language="bash"><command>curl</command> <option>-s</option>  \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>'  \
<option>-H 'Accept: application/xml'</option>  \
<uri>'https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/</uri><emphasis role="bold">your_acct_id</emphasis><uri>/loadbalancers/</uri><emphasis role="bold">load_balancer_id</emphasis><uri>'</uri> | ppxml</programlisting>
        </example>
        <example>
            <title>cURL Show Load Balancer Details Request:
                JSON</title>
            <programlisting language="bash"><command>curl</command> <option>-s</option>  \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>'  \
<option>-H 'Accept: application/json'</option>  \
<uri>'https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</uri><uri>loadbalancers/</uri><emphasis role="bold">load_balancer_id</emphasis><uri>'</uri> | python -m json.tool</programlisting>
        </example>
        <para>Remember to replace the names in the examples above with
            their actual respective values for all the cURL examples
            that follow:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold"
                            >your_auth_token</emphasis> &mdash; as
                        returned in your authentication response (see
                        the response examples in <xref
                            linkend="Generating_Auth_Token"/>)</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"
                            >load_balancer_id</emphasis> &mdash; as
                        returned in your create load balancer response
                        (must be replaced in the request URL)</para>
                </listitem>
            </itemizedlist></para>
        <para>The following examples show the List Load Balancer
            Details responses:</para>
            
            <example security="writeronly">
                <title>List Load Balancer Details Response:
                XML</title>
                <programlisting language="xml"><xi:include href="../../src/resources/samples/lb-gs-list-details-response.xml" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
            </example>
            
            <example>
                <title>Show Load Balancer Details Response:
                JSON</title>
                <programlisting language="json"><xi:include href="../../src/resources/samples-2/lb-gs-list-details-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
            </example>
        </chapter>
    <chapter xml:id="Create_Listener">
        <title>Create listener</title>
        <para>Next you will create a listener. A listener is an object
            containing data pertaining to the "listening" port. This
            object defines the "frontend" of the configuration and
            contains the backend data such as pools and its
            members.</para>
        <para>You need to use the Create listener API call
                (<code>/lbaas/listeners</code>) to create a listener
            with the configuration that you specify.</para>
        <para>In this case, assume that you want to create a listener
            with the following configuration:</para>
        <itemizedlist>
            <listitem>
                <para>"admin_state_up" = "listener1"</para>
            </listitem>
            <listitem>
                <para>"connection_limit" = 100</para>
            </listitem>
            <listitem>
                <para>"description" = "listener one"</para>
            </listitem>
            <listitem>
                <para>"loadbalancer_id" = "<emphasis role="bold"
                        >load_balancer_id</emphasis>"</para>
            </listitem>
            <listitem>
                <para>"name" = "listener1"</para>
            </listitem>
            <listitem>
                <para>"protocol" = "HTTP"</para>
            </listitem>
            <listitem>
                <para>"protocol_port" = "80"</para>
            </listitem>
            <listitem>
                <para>"default_tls_container_ref":
                    "https://barbican.endpoint/containers/
                    a36c20d0-18e9-42ce-88fd-82a35977ee8c"</para>
            </listitem>
            <listitem>
                <para>"sni_container_refs": [
                    "https://barbican.endpoint/containers/
                    b36c20d0-18e9-42ce-88fd-82a35977ee8d",
                    "https://barbican.endpoint/containers/
                    c36c20d0-18e9-42ce-88fd-82a35977ee8e"</para>
                <para security="reviewer">Reviewer: how do we explain to the user where to
                    get these container refs for the previous 2
                    arguments?</para>
            </listitem>
            <listitem security="writeronly">
                <para>description = "my_first_lb"</para>
                <note>
                    <para>When your resources reside in the same
                        region as your load balancer, devices are in
                        close proximity to each other and can elect to
                        take advantage of ServiceNet connectivity (by
                        specifying Virtual IP Type = SERVICENET) for
                        free data transfer between services if
                        desired.</para>
                </note>
            </listitem>
            <listitem security="writeronly">
                <para>Nodes = &lt;enter the IP address that you
                    recorded for your first Cloud Server created in
                        <xref linkend="Create_Cloud_Server"/>:</para>
                <itemizedlist>
                    <listitem>
                        <para><code>&lt;node address="</code><emphasis
                                role="bold">&lt;IP address of FIRST
                                cloud server></emphasis><code>"
                                port="80"
                            condition="ENABLED"/></code></para>
                    </listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>
        <para>The following example shows the cURL request for Create
            listener:</para>
        <example security="writeronly">
            <title>cURL Create Load Balancer Request: XML</title>
            <programlisting language="bash"><command>curl -s -d</command> \
'&lt;?xml version="1.0" ?> 
&lt;loadBalancer xmlns="http://docs.openstack.org/loadbalancers/api/v1.0"
    name="a-new-loadbalancer"
    port="80"
    protocol="HTTP">
    &lt;virtualIps>
        &lt;virtualIp type="PUBLIC"/>
    &lt;/virtualIps>
    &lt;nodes>
        &lt;node address=<emphasis role="bold">"&lt;IP address of FIRST cloud server>"</emphasis> port="80" condition="ENABLED"/> 
    &lt;/nodes>
&lt;/loadBalancer>' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<uri>'https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/</uri><emphasis role="bold">your_acct_id</emphasis><uri>/loadbalancers'</uri> | ppxml</programlisting>
        </example>
        <example>
            <title>cURL Create Listener Request: JSON</title>
            <programlisting language="bash"><command>curl -s -d</command> \
'{
    "listener": {
        "admin_state_up": true,
        "connection_limit": 100,
        "description": "listener one",
        "loadbalancer_id": "<emphasis role="bold">load_balancer_id</emphasis>",
        "name": "listener1",
        "protocol": "HTTP",
        "protocol_port": "80",
        "default_tls_container_ref": "https://barbican.endpoint/containers/a36c20d0-18e9-42ce-88fd-82a35977ee8c",
        "sni_container_refs": [
            "https://barbican.endpoint/containers/b36c20d0-18e9-42ce-88fd-82a35977ee8d",
            "https://barbican.endpoint/containers/c36c20d0-18e9-42ce-88fd-82a35977ee8e" 
        ]   
     }
}' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</uri><uri>loadbalancers'</uri> | python -m json.tool</programlisting>
        </example>
        <para>Remember to replace the names in the examples above with
            their actual respective values for all the cURL examples
            that follow:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold"
                            >your_auth_token</emphasis> &mdash; as
                        returned in your authentication response (see
                        the response examples in <xref
                            linkend="Generating_Auth_Token"/>)</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"
                            >load_balancer_id</emphasis> &mdash; as
                        returned in your create load balancer response
                        (must be replaced in the request URL)</para>
                </listitem>
            </itemizedlist></para>
        <para>The following example shows the response for Create
            listener:</para>
        <example security="writeronly">
            <title>Create Load Balancer Response: XML</title>
            <programlisting language="xml"><xi:include href="../../src/resources/samples/lb-gs-create-required-response.xml" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <example>
            <title>cURL Create Listener Response: JSON</title>
            <programlisting language="json"><xi:include href="../../src/resources/samples-2/lb-gs-create-listener-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <para>In this example, you can see that a new Listener has
            been created with id 39de4d56-d663-46e5-85a1-5b9d5fa17829.
            You will need the Listener id for making the Create Pool
            call in the next section, and you should supply this value
            wherever you see the field <emphasis role="bold"
                >listener_id</emphasis> in the examples in this
            guide.</para>
    </chapter>
    <chapter xml:id="Create_Pool">
        <title>Create pool</title>
        <para>Next you will create a pool. A pool is a logical set of
            devices, such as web servers, that you group together to
            receive and process traffic. Instead of sending client
            traffic to the destination IP address specified in the
            client request, the system sends the request to any of the
            servers that are members of that pool.</para>
        <para>You need to use the Create pool API call
                (<code>/lbaas/pools</code>) to create a pool with the
            configuration that you specify.</para>
        <para>In this case, assume that you want to create a pool with
            the following configuration:</para>
        <itemizedlist>
            <listitem>
                <para>"admin_state_up" = true</para>
            </listitem>
            <listitem>
                <para>"description" = "simple pool"</para>
            </listitem>
            <listitem>
                <para>"lb_algorithm" = "ROUND_ROBIN"</para>
            </listitem>
            <listitem>
                <para>"listener_id" = "<emphasis role="bold"
                        >listener_id</emphasis>"</para>
            </listitem>
            <listitem>
                <para>"name" = "pool1"</para>
            </listitem>
            <listitem>
                <para>"protocol" = "HTTP"</para>
            </listitem>
            <listitem>
                <para>"session_persistence" = { "cookie_name":
                    "my_cookie", "type": "APP_COOKIE" }</para>
            </listitem>
        </itemizedlist>
        <para>The following example shows the cURL request for Create
            pool:</para>
        <example security="writeronly">
            <title>cURL Create Load Balancer Request: XML</title>
            <programlisting language="bash"><command>curl -s -d</command> \
'&lt;?xml version="1.0" ?> 
&lt;loadBalancer xmlns="http://docs.openstack.org/loadbalancers/api/v1.0"
    name="a-new-loadbalancer"
    port="80"
    protocol="HTTP">
    &lt;virtualIps>
        &lt;virtualIp type="PUBLIC"/>
    &lt;/virtualIps>
    &lt;nodes>
        &lt;node address=<emphasis role="bold">"&lt;IP address of FIRST cloud server>"</emphasis> port="80" condition="ENABLED"/> 
    &lt;/nodes>
&lt;/loadBalancer>' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<uri>'https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/</uri><emphasis role="bold">your_acct_id</emphasis><uri>/loadbalancers'</uri> | ppxml</programlisting>
        </example>
        <example>
            <title>cURL Create pool request: JSON</title>
            <programlisting language="bash"><command>curl -s -d</command> \
'{
    "pool": {
        "admin_state_up": true,
        "description": "simple pool",
        "lb_algorithm": "ROUND_ROBIN",
        "listener_id": "<emphasis role="bold">listener_id</emphasis>",
        "name": "pool1",
        "protocol": "HTTP",
        "session_persistence": {
            "cookie_name": "my_cookie",
            "type": "APP_COOKIE"
        }   
     }
}' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</uri><uri>pools'</uri> | python -m json.tool</programlisting>
        </example>
        <para>Remember to replace the names in the examples above with
            their actual respective values for all the cURL examples
            that follow:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold"
                            >your_auth_token</emphasis> &mdash; as
                        returned in your authentication response (see
                        the response examples in <xref
                            linkend="Generating_Auth_Token"/>)</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">listener_id</emphasis>
                        &mdash; as returned in your Create listener
                        response (must be replaced in the request
                        URL)</para>
                </listitem>
            </itemizedlist></para>
        <para>The following example shows the response for Create
            pool:</para>
        <example security="writeronly">
            <title>Create Load Balancer Response: XML</title>
            <programlisting language="xml"><xi:include href="../../src/resources/samples/lb-gs-create-required-response.xml" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <example>
            <title>cURL Create pool response: JSON</title>
            <programlisting language="json"><xi:include href="../../src/resources/samples-2/lb-gs-create-pool-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <para>In this example, you can see that a new pool has been
            created with id 12ff63af-4127-4074-a251-bcb2ecc53ebe. You
            will need the pool id for making the Add member to pool
            call in the next section, and you should supply this value
            wherever you see the field <emphasis role="bold"
                >pool_id</emphasis> in the examples in this
            guide.</para>
    </chapter>
    <chapter xml:id="Add_member_to_pool">
        <title>Add member to pool</title>
        <para>When a member is added to a pool, the member is assigned
            a unique identifier that can be used for management
            operations such as changing the admin_state or removing
            it.</para>
        <para>For the member, enter the IP address that you recorded
            for your second Cloud Server created in <xref
                linkend="Create_Cloud_Server"/>. </para>
        <para>Assume that want to configure the member as follows. <itemizedlist>
                <listitem>
                    <para>"address" =  "<emphasis role="bold">IP
                            address of FIRST cloud server</emphasis>" </para>
                    <para>Enter the IP address that you recorded for
                        your first Cloud Server, created at the
                        beginning of this Getting Started.</para>
                </listitem>
                <listitem>
                    <para>"admin_state_up" = true</para>
                </listitem>
                <listitem>
                    <para>"protocol_port" = 80</para>
                </listitem>
                <listitem>
                    <para>"subnet_id" = "<emphasis role="bold"
                            >subnet_id</emphasis>"</para>
                    <para><emphasis role="bold">subnet_id</emphasis>
                        specifies the UUID of the subnet in which to
                        access this member.</para>
                </listitem>
                <listitem>
                    <para>"weight" = 1</para>
                    <para>A positive integer value that indicates the
                        relative portion of traffic that this member
                        should receive from the pool. For example, a
                        member with a weight of 10 receives five times
                        as much traffic as a member with a weight of
                        2.</para>
                </listitem>
            </itemizedlist></para>
        <para xmlns="http://docbook.org/ns/docbook">The following
            example shows the cURL request for Add member to
            pool:</para>
        <example security="writeronly">
            <title>cURL add member to pool request: XML</title>
            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'&lt;?xml version="1.0" ?> 
&lt;nodes xmlns="http://docs.openstack.org/loadbalancers/api/v1.0">
    &lt;node address="<emphasis role="bold">&lt;IP address of SECOND cloud server></emphasis>" port="80" condition="ENABLED" />
&lt;/nodes>' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<uri>'https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/</uri><emphasis role="bold">your_acct_id</emphasis><uri>/loadbalancers/</uri><emphasis role="bold">load_balancer_id</emphasis><uri>/nodes'</uri> | ppxml</programlisting>
        </example>
        <example>
            <?dbfo keep-together="always"?>
            <title>cURL add member to pool request: JSON</title>
            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "member": [
        {
            "address": "&lt;<emphasis role="bold">IP address of Cloud Server</emphasis>>",
            "admin_state_up": true,
            "protocol_port": 80,
            "subnet_id": "<emphasis role="bold">subnet_id</emphasis>",
            "weight": 1
        }
    ]
}' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</uri><uri>pools/</uri><emphasis role="bold">pool_id</emphasis><uri>/members'</uri> | python -m json.tool</programlisting>
        </example>
        <para>Remember to replace the names in the examples above with
            their actual respective values:<itemizedlist spacing="compact">
                <listitem>
                    <para><emphasis role="bold">IP address of Cloud
                            Server</emphasis> &mdash; the IP address
                        that you recorded for your Cloud Server,
                        created at the beginning of this Getting
                        Started.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"
                            >your_auth_token</emphasis> &mdash; as
                        returned in your authentication response (see
                        the examples in <xref
                            linkend="Generating_Auth_Token"/>)</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"
                            >load_balancer_id</emphasis> &mdash; as
                        returned in your create load balancer response
                        (see the examples in <xref
                            linkend="Create_Load_Balancer"/>)</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">subnet_id</emphasis>
                        &mdash; specifies the UUID of the subnet in
                        which to access this member</para>
                    <para security="reviewer">Reviewer: how do we explain to the user
                        where to get the subnet_id?</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">pool_id</emphasis>
                        &mdash; specifies the UUID of the associated
                        pool</para>
                </listitem>
            </itemizedlist></para>
        <para>The following example shows the response for Add member
            to pool:</para>
        <example security="writeronly">
            <title>Add member to pool response: XML</title>
            <programlisting language="xml"><xi:include href="../../src/resources/samples/lb-gs-add-nodes-response.xml" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <example>
            <title>Add member to pool response: JSON</title>
            <programlisting language="json"><xi:include href="../../src/resources/samples-2/lb-gs-add-member-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <para>In this example, you can see that a new member with id
            9a7aff27-fd41-4ec1-ba4c-3eb92c629313 has been added to the
            pool. You will need the pool id for making the Create
            health monitor call in the next section, and you should
            supply this value wherever you see the field <emphasis
                role="bold">pool_id</emphasis> in the examples in this
            guide.</para>
    </chapter>
    <chapter xml:id="Create_Health_Monitor">
        <title>Create health monitor</title>
        <para>In this section you will create a health monitor for
            your pool.</para>
        <para>Assume that want to configure the health monitor as follows:<itemizedlist>
                <listitem>
                    <para>"admin_state_up" = true</para>
                </listitem>
                <listitem>
                    <para>"delay" = "1"</para>
                </listitem>
                <listitem>
                    <para>"expected_codes" = "200, 201,202"</para>
                </listitem>
                <listitem>
                    <para>"http_method" = "GET"</para>
                </listitem>
                <listitem>
                    <para>"max_retries" = 5</para>
                </listitem>
                <listitem>
                    <para>"pool_id" = "<emphasis role="bold"
                            >pool_id</emphasis>"</para>
                </listitem>
                <listitem>
                    <para>"timeout" = 1</para>
                </listitem>
                <listitem>
                    <para>"type" = "HTTP"</para>
                </listitem>
                <listitem>
                    <para>"url_path" = "/index.html"</para>
                </listitem>
            </itemizedlist></para>
        <para>The following example shows the cURL request for Create
            health monitor:</para>
        <example security="writeronly">
            <title>cURL Create health monitor request: XML</title>
            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'&lt;?xml version="1.0" ?>
&lt;loadBalancer xmlns="http://docs.openstack.org/loadbalancers/api/v1.0"
    algorithm="LEAST_CONNECTIONS" />' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/xml'</option> \
<option>-H 'Accept: application/xml'</option> \
<option>-X PUT</option> \
<uri>'https://dfw.loadbalancers.api.rackspacecloud.com/v1.0/</uri><emphasis role="bold">your_acct_id</emphasis><uri>/loadbalancers/</uri><emphasis role="bold">load_balancer_id</emphasis><uri>'</uri></programlisting>
        </example>
        <example>
            <title>cURL Create health monitor request: JSON</title>
            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "healthmonitor": {
        "admin_state_up": true,
        "delay": "1",
        "expected_codes": "200,201,202",
        "http_method": "GET",
        "max_retries": 5,
        "pool_id": "<emphasis role="bold">pool_id</emphasis>",
        "timeout": 1,
        "type": "HTTP",
        "url_path": "/index.html"
    }
}' \
-H 'X-Auth-Token: <emphasis role="bold">your_auth_token</emphasis>' \
<option>-H 'Content-Type: application/json'</option> \
<option>-X PUT</option> \
<uri>'https://iad.networks.api.rackspacecloud.com/v2.0/lbass/</uri><uri>health_monitors/</uri><uri>'</uri></programlisting>
        </example>
        <para>Remember to replace the names in the examples above with
            their actual respective values:<itemizedlist
                spacing="compact">
                <listitem>
                    <para><emphasis role="bold">pool_id</emphasis>
                        &mdash; the pool id associated with this
                        health monitor, as returned by the Create pool
                        call.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"
                            >your_auth_token</emphasis> &mdash; as
                        returned in your authentication response (see
                        the examples in <xref
                            linkend="Generating_Auth_Token"/>)</para>
                </listitem>
            </itemizedlist></para>
        <para>The following example shows the cURL response for Create
            health monitor:</para>
        <example>
            <title>Create health monitor response: JSON</title>
            <programlisting language="json"><xi:include href="../../src/resources/samples-2/lb-gs-create-health-monitor-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
        </example>
        <para>Congratulations! You now have added a health monitor to
            your load balancer configuration.</para>
    </chapter>
    <chapter xml:id="LB_Doc_Change_History">
        <title>Document Change History</title>
        <para>This version of the Getting Started replaces and
            obsoletes all previous versions. The most recent changes
            are described in the table below:</para>
        <?rax revhistory?>
    </chapter>
</book>
